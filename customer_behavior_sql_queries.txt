-- ==========================================
-- 1Ô∏è‚É£ View all data
-- ==========================================
SELECT * 
FROM customer_shopping_behavior;

-- ==========================================
-- 2Ô∏è‚É£ Revenue by gender
-- ==========================================
SELECT gender, 
       SUM(purchase_amount) AS revenue
FROM customer_shopping_behavior
GROUP BY gender;

-- ==========================================
-- 3Ô∏è‚É£ High-value discounted purchases
-- ==========================================
SELECT customer_id, purchase_amount
FROM customer_shopping_behavior
WHERE discount_applied = 'Yes'
  AND purchase_amount >= (
      SELECT AVG(purchase_amount) 
      FROM customer_shopping_behavior
  );

-- ==========================================
-- 4Ô∏è‚É£ Top 5 items by average review rating
-- ==========================================
SELECT item_purchased, 
       ROUND(AVG(review_rating::numeric),2) AS average_product_rating
FROM customer_shopping_behavior
GROUP BY item_purchased
ORDER BY AVG(review_rating) DESC
LIMIT 5;

-- ==========================================
-- 5Ô∏è‚É£ Average purchase amount by shipping type (Standard & Express)
-- ==========================================
SELECT shipping_type, 
       ROUND(AVG(purchase_amount),2) AS avg_purchase_amount
FROM customer_shopping_behavior
WHERE shipping_type IN ('Standard','Express')
GROUP BY shipping_type;

-- ==========================================
-- 6Ô∏è‚É£ Subscription status summary
-- ==========================================
SELECT subscription_status, 
       COUNT(customer_id) AS total_customers,
       ROUND(AVG(purchase_amount), 2) AS avg_speed,
       ROUND(SUM(purchase_amount), 2) AS total_revenue
FROM customer_shopping_behavior
GROUP BY subscription_status
ORDER BY total_revenue, avg_speed DESC;

-- ==========================================
-- 7Ô∏è‚É£ Top 5 items by discount rate
-- ==========================================
SELECT item_purchased,
       ROUND(
           SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END)::numeric
           / COUNT(*) * 100, 
           2
       ) AS discount_rate
FROM customer_shopping_behavior
GROUP BY item_purchased
ORDER BY discount_rate DESC
LIMIT 5;

-- ==========================================
-- 8Ô∏è‚É£ Customer segments based on previous purchases
-- ==========================================
WITH customer_type AS (
    SELECT customer_id,
           previous_purchases,
           CASE
               WHEN previous_purchases = 1 THEN 'New'
               WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
               ELSE 'Loyal'
           END AS customer_segment
    FROM customer_shopping_behavior
)
SELECT customer_segment,
       COUNT(*) AS number_of_customers
FROM customer_type
GROUP BY customer_segment;

-- ==========================================
-- 9Ô∏è‚É£ Top 3 items per category
-- ==========================================
WITH item_counts AS (
    SELECT category,
           item_purchased,
           COUNT(customer_id) AS total_orders,
           ROW_NUMBER() OVER (
               PARTITION BY category 
               ORDER BY COUNT(customer_id) DESC
           ) AS item_rank
    FROM customer_shopping_behavior
    GROUP BY category, item_purchased
)
SELECT item_rank, 
       category, 
       item_purchased, 
       total_orders
FROM item_counts
WHERE item_rank <= 3;

-- ==========================================
-- üîü Repeat buyers by subscription status
-- ==========================================
SELECT subscription_status,
       COUNT(customer_id) AS repeat_buyers
FROM customer_shopping_behavior
WHERE previous_purchases > 5
GROUP BY subscription_status;

-- ==========================================
-- 1Ô∏è‚É£1Ô∏è‚É£ Total revenue by age group
-- ==========================================
SELECT age_group,
       SUM(purchase_amount) AS total_revenue
FROM customer_shopping_behavior
GROUP BY age_group
ORDER BY total_revenue DESC;